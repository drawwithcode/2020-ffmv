function Scribble(t){this.sketch=t||window,this.bowing=1,this.roughness=1,this.maxOffset=2,this.numEllipseSteps=9,this.ellipseInc=2*Math.PI/this.numEllipseSteps,this.getOffset=function(t,e){return this.roughness*(this.sketch.random()*(e-t)+t)},this.buildEllipse=function(t,e,s,i,h,n){var f=this.getOffset(-.5,.5)-Math.PI/2;this.sketch.beginShape(),this.sketch.curveVertex(this.getOffset(-h,h)+t+.9*s*Math.cos(f-this.ellipseInc),this.getOffset(-h,h)+e+.9*i*Math.sin(f-this.ellipseInc));for(var r=f;r<2*Math.PI+f-.01;r+=this.ellipseInc)this.sketch.curveVertex(this.getOffset(-h,h)+t+s*Math.cos(r),this.getOffset(-h,h)+e+i*Math.sin(r));this.sketch.curveVertex(this.getOffset(-h,h)+t+s*Math.cos(f+2*Math.PI+.5*n),this.getOffset(-h,h)+e+i*Math.sin(f+2*Math.PI+.5*n)),this.sketch.curveVertex(this.getOffset(-h,h)+t+.98*s*Math.cos(f+n),this.getOffset(-h,h)+e+.98*i*Math.sin(f+n)),this.sketch.curveVertex(this.getOffset(-h,h)+t+.9*s*Math.cos(f+.5*n),this.getOffset(-h,h)+e+.9*i*Math.sin(f+.5*n)),this.sketch.endShape()},this.getIntersectingLines=function(t,e,s){for(var i=[],h=new Segment(t[0],t[1],t[2],t[3]),n=0;n<e.length;n++){var f=new Segment(e[n],s[n],e[(n+1)%e.length],s[(n+1)%e.length]);h.compare(f)==Relation.INTERSECTS&&i.push([h.getIntersectionX(),h.getIntersectionY()])}return i},this.scribbleLine=function(t,e,s,i){var h=(t-s)*(t-s)+(e-i)*(e-i),n=this.maxOffset;this.maxOffset*this.maxOffset*100>h&&(n=Math.sqrt(h)/10);var f=n/2,r=.2+.2*this.sketch.random(),a=this.bowing*this.maxOffset*(i-e)/200,g=this.bowing*this.maxOffset*(t-s)/200;a=this.getOffset(-a,a),g=this.getOffset(-g,g),this.sketch.noFill(),this.sketch.beginShape(),this.sketch.vertex(t+this.getOffset(-n,n),e+this.getOffset(-n,n)),this.sketch.curveVertex(t+this.getOffset(-n,n),e+this.getOffset(-n,n)),this.sketch.curveVertex(a+t+(s-t)*r+this.getOffset(-n,n),g+e+(i-e)*r+this.getOffset(-n,n)),this.sketch.curveVertex(a+t+2*(s-t)*r+this.getOffset(-n,n),g+e+2*(i-e)*r+this.getOffset(-n,n)),this.sketch.curveVertex(s+this.getOffset(-n,n),i+this.getOffset(-n,n)),this.sketch.vertex(s+this.getOffset(-n,n),i+this.getOffset(-n,n)),this.sketch.endShape(),this.sketch.beginShape(),this.sketch.vertex(t+this.getOffset(-f,f),e+this.getOffset(-f,f)),this.sketch.curveVertex(t+this.getOffset(-f,f),e+this.getOffset(-f,f)),this.sketch.curveVertex(a+t+(s-t)*r+this.getOffset(-f,f),g+e+(i-e)*r+this.getOffset(-f,f)),this.sketch.curveVertex(a+t+2*(s-t)*r+this.getOffset(-f,f),g+e+2*(i-e)*r+this.getOffset(-f,f)),this.sketch.curveVertex(s+this.getOffset(-f,f),i+this.getOffset(-f,f)),this.sketch.vertex(s+this.getOffset(-f,f),i+this.getOffset(-f,f)),this.sketch.endShape()},this.scribbleCurve=function(t,e,s,i,h,n,f,r){this.sketch.bezier(t+this.getOffset(-2,2),e+this.getOffset(-2,2),h+this.getOffset(-4,4),n+this.getOffset(-3,3),f+this.getOffset(-3,3),r+this.getOffset(-3,3),s+this.getOffset(-1,1),i+this.getOffset(-1,1)),this.sketch.bezier(t+this.getOffset(-2,2),e+this.getOffset(-2,2),h+this.getOffset(-3,3),n+this.getOffset(-3,3),f+this.getOffset(-3,3),r+this.getOffset(-4,4),s+this.getOffset(-2,2),i+this.getOffset(-2,2))},this.scribbleRect=function(t,e,s,i){var h=s/2,n=i/2,f=Math.min(t-h,t+h),r=Math.max(t-h,t+h),a=Math.min(e-n,e+n),g=Math.max(e-n,e+n);this.scribbleLine(f,a,r,a),this.scribbleLine(r,a,r,g),this.scribbleLine(r,g,f,g),this.scribbleLine(f,g,f,a)},this.scribbleRoundedRect=function(t,e,s,i,h){var n=s/2,f=i/2;if(0==h||h>n||h>f)this.scribbleRect(t,e,s,i);else{var r=Math.min(t-n,t+n),a=Math.max(t-n,t+n),g=Math.min(e-f,e+f),c=Math.max(e-f,e+f);this.scribbleLine(r+h,g,a-h,g,1.5),this.scribbleLine(a,g+h,a,c-h,1.5),this.scribbleLine(a-h,c,r+h,c,1.5),this.scribbleLine(r,c-h,r,g+h,1.5),this.scribbleCurve(r+h,g,r,g+h,r+.1*h,g+.1*h,r+.1*h,g+.1*h),this.scribbleCurve(a-h,g,a,g+h,a-.1*h,g+.1*h,a-.1*h,g+.1*h),this.scribbleCurve(r+h,c,r,c-h,r+.1*h,c-.1*h,r+.1*h,c-.1*h),this.scribbleCurve(a-h,c,a,c-h,a-.1*h,c-.1*h,a-.1*h,c-.1*h)}},this.scribbleEllipse=function(t,e,s,i){var h=Math.abs(s/2),n=Math.abs(i/2);h+=this.getOffset(.05*-h,.05*h),n+=this.getOffset(.05*-n,.05*n),this.buildEllipse(t,e,h,n,1,this.ellipseInc*this.getOffset(.1,this.getOffset(.4,1))),this.buildEllipse(t,e,h,n,1.5,0)},this.scribbleFilling=function(t,e,s,i){if(null!=t&&null!=e&&0!=t.length&&0!=e.length){for(var h=this.sketch.radians(i%180),n=Math.cos(h),f=Math.sin(h),r=Math.tan(h),a=t[0],g=t[0],c=e[0],l=e[0],u=1;u<t.length;u++)a=Math.min(a,t[u]),g=Math.max(g,t[u]),c=Math.min(c,e[u]),l=Math.max(l,e[u]);for(var o=new HachureIterator(c-1,l+1,a-1,g+1,s,f,n,r),b=null;null!=(b=o.getNextLine());){var O=this.getIntersectingLines(b,t,e);for(u=0;u<O.length;u+=2)if(u<O.length-1){var E=O[u],M=O[u+1];this.scribbleLine(E[0],E[1],M[0],M[1],2)}}}}}function HachureIterator(t,e,s,i,h,n,f,r){var a,g,c,l,u,o=n,b=r,O=t,E=e,M=s,x=i,m=h;Math.abs(o)<1e-4?a=M+m:Math.abs(o)>.9999?a=O+m:(g=(E-O)*Math.abs(b),a=M-Math.abs(g),c=Math.abs(m/f),l=new Segment(M,E,M,O),u=new Segment(x,E,x,O)),this.getNextLine=function(){if(Math.abs(o)<1e-4){if(a<x){var t=[a,O,a,E];return a+=m,t}}else if(Math.abs(o)>.9999){if(a<E){t=[M,a,x,a];return a+=m,t}}else{var e=a-g/2,s=a+g/2,i=E,h=O;if(a<x+g){for(;e<M&&s<M||e>x&&s>x;)if(e=(a+=c)-g/2,s=a+g/2,a>x+g)return null;var n=new Segment(e,i,s,h);return n.compare(l)==Relation.INTERSECTS&&(e=n.getIntersectionX(),i=n.getIntersectionY()),n.compare(u)==Relation.INTERSECTS&&(s=n.getIntersectionX(),h=n.getIntersectionY()),b>0&&(e=x-(e-M),s=x-(s-M)),a+=c,t=[e,i,s,h]}}return null}}function Segment(t,e,s,i){var h,n,f,r,a=t,g=e,c=s,l=i,u=Number.MAX_VALUE,o=Number.MAX_VALUE;n=a-c,f=c*g-a*l,r=0==(h=l-g)&&0==n&&0==f,this.compare=function(t){if(this.isUndefined()||t.isUndefined())return Relation.UNDEFINED;var e=Number.MAX_VALUE,s=Number.MAX_VALUE,i=0,r=0;return Math.abs(n)>1e-5&&(e=-h/n,i=-f/n),Math.abs(t.getB())>1e-5&&(s=-t.getA()/t.getB(),r=-t.getC()/t.getB()),e==Number.MAX_VALUE?s==Number.MAX_VALUE?-f/h!=-t.getC()/t.getA()?Relation.SEPARATE:g>=Math.min(t.getPy1(),t.getPy2())&&g<=Math.max(t.getPy1(),t.getPy2())?(u=a,o=g,Relation.INTERSECTS):l>=Math.min(t.getPy1(),t.getPy2())&&l<=Math.max(t.getPy1(),t.getPy2())?(u=c,o=l,Relation.INTERSECTS):Relation.SEPARATE:(g-(o=s*(u=a)+r))*(o-l)<-1e-5||(t.getPy1()-o)*(o-t.getPy2())<-1e-5?Relation.SEPARATE:Math.abs(t.getA())<1e-5&&(t.getPx1()-u)*(u-t.getPx2())<-1e-5?Relation.SEPARATE:Relation.INTERSECTS:s==Number.MAX_VALUE?(u=t.getPx1(),o=e*u+i,(t.getPy1()-o)*(o-t.getPy2())<-1e-5||(g-o)*(o-l)<-1e-5?Relation.SEPARATE:Math.abs(h)<1e-5&&(a-u)*(u-c)<-1e-5?Relation.SEPARATE:Relation.INTERSECTS):e==s?i!=r?Relation.SEPARATE:a>=Math.min(t.getPx1(),t.getPx2())&&a<=Math.max(t.getPy1(),t.getPy2())?(u=a,o=g,Relation.INTERSECTS):c>=Math.min(t.getPx1(),t.getPx2())&&c<=Math.max(t.getPx1(),t.getPx2())?(u=c,o=l,Relation.INTERSECTS):Relation.SEPARATE:(o=e*(u=(r-i)/(e-s))+i,(a-u)*(u-c)<-1e-5||(t.getPx1()-u)*(u-t.getPx2())<-1e-5?Relation.SEPARATE:Relation.INTERSECTS)},this.getPx1=function(){return a},this.getPy1=function(){return g},this.getPx2=function(){return c},this.getPy2=function(){return l},this.isUndefined=function(){return r},this.getA=function(){return h},this.getB=function(){return n},this.getC=function(){return f},this.getIntersectionX=function(){return u},this.getIntersectionY=function(){return o},this.getLength=function(t,e,s,i){var h=s-t,n=i-e;return Math.sqrt(h*h+n*n)}}var Relation={LEFT:1,RIGHT:2,INTERSECTS:3,AHEAD:4,BEHIND:5,SEPARATE:6,UNDEFINED:7};